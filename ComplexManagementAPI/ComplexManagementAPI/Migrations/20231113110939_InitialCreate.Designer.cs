// <auto-generated />
using System;
using ComplexManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComplexManagementAPI.Migrations
{
    [DbContext(typeof(ComplexManagementDbContext))]
    [Migration("20231113110939_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComplexManagementAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.LeaseAgreement", b =>
                {
                    b.Property<int>("LeaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreID")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaseID");

                    b.HasIndex("StoreID");

                    b.ToTable("LeaseAgreements");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.MaintenanceContract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("ContractID");

                    b.HasIndex("StoreID");

                    b.ToTable("MaintenanceContracts");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaseAgreementLeaseID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("LeaseAgreementLeaseID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.LeaseAgreement", b =>
                {
                    b.HasOne("ComplexManagementAPI.Models.Store", null)
                        .WithMany("LeaseAgreements")
                        .HasForeignKey("StoreID");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.MaintenanceContract", b =>
                {
                    b.HasOne("ComplexManagementAPI.Models.Store", null)
                        .WithMany("MaintenanceContracts")
                        .HasForeignKey("StoreID");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.Payment", b =>
                {
                    b.HasOne("ComplexManagementAPI.Models.LeaseAgreement", null)
                        .WithMany("Payments")
                        .HasForeignKey("LeaseAgreementLeaseID");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.Store", b =>
                {
                    b.HasOne("ComplexManagementAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.LeaseAgreement", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ComplexManagementAPI.Models.Store", b =>
                {
                    b.Navigation("LeaseAgreements");

                    b.Navigation("MaintenanceContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
